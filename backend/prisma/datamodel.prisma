enum Permission {
  ADMIN
  EMPLOYEE
  USER
}

type User {
  id: ID! @id
  name: String!
  email: String! @unique
  password: String!
  resetToken: String
  resetTokenExpiry: Float
  permissions: [Permission] @scalarList(strategy: RELATION)
}

# product related
type Product {
  id: ID! @id
  title: String!
  slug: String!
  description: String!
  productImages: [ProductImage!]!
    @relation(name: "ProductImage", onDelete: "CASCADE")
  basePrice: Money
  isAvailable: Boolean!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  category: Category!
  productVariants: [ProductVariant]
  productType: ProductType!
  weight: Weight
}

type Category {
  id: ID! @id
  name: String!
  slug: String!
  description: String!
  productsInCategory: [Product!]!
}

type ProductImage {
  id: ID! @id
  title: String!
  thumbnail: String
  image: String!
  largeImage: String!
  product: Product! @relation(name: "ProductImage", onDelete: CASCADE)
}

# Stock might need to change
type ProductVariant {
  id: ID! @id
  sku: String!
  name: String!
  product: Product!
  quantity: Int!
  quantityAllocated: Int!
  weight: Weight
  stockQuantity: Int!
  price: Money @relation(name: "ProductVariantPrice")
  isAvailable: Boolean
  costPrice: Money @relation(name: "ProductVariantCostPrice")
}

type ProductType {
  id: ID! @id
  name: String!
  shippingRequired: Boolean! @default(value: true)
  weight: Weight
  taxes: Tax
  hasVariants: Boolean @default(value: false)
  productAttributes: [Attribute]
    @relation(name: "ProductAttributes", onDelete: CASCADE)
  variantAttributes: [Attribute]
    @relation(name: "VariantAttributes", onDelete: CASCADE)
}

type Attribute {
  id: ID! @id
  productType: ProductType @relation(name: "ProductAttributes")
  productVariantType: ProductType @relation(name: "VariantAttributes")
  attributeName: String
  # slug: String
  attributeValues: [AttributeValue!]!
}

type AttributeValue {
  id: ID! @id
  value: String!
}

# Stock related - might need to change from what saleor do
type Stock {
  id: ID! @id
  quantity: Int!
  quantityAllocated: Int
  variant: ProductVariant
  location: StockLocation!
}

type StockLocation {
  id: ID! @id
  name: String!
}

# Money related
type Tax {
  id: ID! @id
  name: String!
  taxRate: Int!
}

type Money {
  id: ID! @id
  currency: String!
  amount: Float!
  localized: String!
}

# type OrderItem {

# }

# type Order {

# }

type Weight {
  id: ID! @id
  unit: String!
  value: Float!
}
